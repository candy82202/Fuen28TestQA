// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Fuen28TestQuestion.Models.EFModels;

public partial class TestContext : DbContext
{
    public TestContext()
    {
    }

    public TestContext(DbContextOptions<TestContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<MemberAnswer> MemberAnswers { get; set; }

    public virtual DbSet<MemberGrade> MemberGrades { get; set; }

    public virtual DbSet<Question> Questions { get; set; }

    public virtual DbSet<Title> Titles { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)

        => optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=Test;Persist Security Info=True;User ID=sa5;Password=sa5");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Members__3214EC07B941DAC7");

            entity.HasIndex(e => e.Username, "UQ__Members__536C85E465DEB3FD").IsUnique();

            entity.Property(e => e.ImageName).HasMaxLength(255);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<MemberAnswer>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Answer__3214EC074E176EF9");

            entity.Property(e => e.Answer)
                .IsRequired()
                .HasMaxLength(1000);
            entity.Property(e => e.AnswerTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberAnswers)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MemberAnswers_Members");
        });

        modelBuilder.Entity<MemberGrade>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Grades__3214EC07C2312B1F");

            entity.Property(e => e.Grade).HasDefaultValueSql("((0))");
            entity.Property(e => e.TestTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberGrades)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MemberGrades_Members");

            entity.HasOne(d => d.Title).WithMany(p => p.MemberGrades)
                .HasForeignKey(d => d.TitleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MemberGrades_Titles");
        });

        modelBuilder.Entity<Question>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Question__3214EC0773658F6D");

            entity.Property(e => e.Answer)
                .IsRequired()
                .HasMaxLength(1000);
            entity.Property(e => e.QuestionText)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Title).WithMany(p => p.Questions)
                .HasForeignKey(d => d.TitleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Question_Title");
        });

        modelBuilder.Entity<Title>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Title__3214EC07FAABC9B6");

            entity.Property(e => e.TitleName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}